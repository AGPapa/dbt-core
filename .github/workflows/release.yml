# **what?**
# Release workflow provides the following steps:
# - checkout the given commit;
# - validate version in sources and changelog file for given version;
# - bump the version and generate a changelog if needed;
# - merge all changes to the target branch if needed;
# - run unit and integration tests against given commit;
# - build and package that SHA;
# - release it to GitHub and PyPI with that specific build;
#
# **why?**
# Ensure an automated and tested release process
#
# **when?**
# This workflow can be run manually on demand or can be called by other workflows

name: Release to GitHub and PyPI

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "The last commit sha in the release"
        type: string
        required: true
      target_branch:
        description: "The branch to release from"
        type: string
        required: true
      version_number:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      build_script_path:
        description: "Build script path"
        type: string
        default: "scripts/build-dist.sh"
        required: true
      env_setup_script_path:
        description: "Environment setup script path"
        type: string
        default: "scripts/env-setup.sh"
        required: false
      s3_bucket_name:
        description: "AWS S3 bucket name"
        type: string
        default: "core-team-artifacts"
        required: true
      package_test_command:
        description: "Package test command"
        type: string
        default: "dbt --version"
        required: true
      test_run:
        description: "Test run (Publish release as draft)"
        type: boolean
        default: true
        required: false
      nightly_release:
        description: "Nightly release to dev environment"
        type: boolean
        default: false
        required: false
  workflow_call:
    inputs:
      sha:
        description: "The last commit sha in the release"
        type: string
        required: true
      target_branch:
        description: "The branch to release from"
        type: string
        required: true
      version_number:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      build_script_path:
        description: "Build script path"
        type: string
        default: "scripts/build-dist.sh"
        required: true
      env_setup_script_path:
        description: "Environment setup script path"
        type: string
        default: "scripts/env-setup.sh"
        required: false
      s3_bucket_name:
        description: "AWS S3 bucket name"
        type: string
        default: "core-team-artifacts"
        required: true
      package_test_command:
        description: "Package test command"
        type: string
        default: "dbt --version"
        required: true
      test_run:
        description: "Test run (Publish release as draft)"
        type: boolean
        default: true
        required: false
      nightly_release:
        description: "Nightly release to dev environment"
        type: boolean
        default: false
        required: false

permissions:
  contents: write # this is the permission that allows creating a new release
  packages: write

defaults:
  run:
    shell: bash

jobs:
  pypi-release:
    name: Log Inputs
    runs-on: ubuntu-latest
    steps:
      - name: "[DEBUG] Print Variables"
        run: |
          echo The last commit sha in the release: ${{ inputs.sha }}
          echo The branch to release from:         ${{ inputs.target_branch }}
          echo The release version number:         ${{ inputs.version_number }}
          echo Build script path:                  ${{ inputs.build_script_path }}
          echo Environment setup script path:      ${{ inputs.env_setup_script_path }}
          echo AWS S3 bucket name:                 ${{ inputs.s3_bucket_name }}
          echo Package test command:               ${{ inputs.package_test_command }}
          echo Test run:                           ${{ inputs.test_run }}
          echo Nightly release:                    ${{ inputs.nightly_release }}


  docker-core-release:
    name: Docker dbt-core Release
    if: ${{ !inputs.test_run }}
    needs: [pypi-release]

    uses: leahwicz/dbt-core/.github/workflows/release-docker.yml@main
    with:
      package_name: dbt-core
      version_num: ${{ inputs.version_number }}
      

  docker-postgres-release:
    name: Docker dbt-postgres Release
    needs: [docker-core-release]

    uses: leahwicz/dbt-core/.github/workflows/release-docker.yml@main
    with:
      package_name: dbt-postgres
      version_num: ${{ inputs.version_number }}

